name: Version and Release

on:
  push:
    branches:
      - main

# Add permissions block
permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      # Checkout code with full history for versioning
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Setup Go environment
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '>=1.23.2'

      # Get next version and create tag
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@v1
        id: tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch

      # Add this step before the build steps
      - name: Generate version info
        run: |
          go install github.com/josephspurrier/goversioninfo/cmd/goversioninfo@latest
          goversioninfo -platform-specific=true

      # Build normal mode binary (no console)
      - name: Build normal mode
        env:
          VERSION: ${{ steps.tag.outputs.new_tag }}
          GOOS: windows
          GOARCH: 386
        run: |
          go build -ldflags="-H=windowsgui -X main.Version=${VERSION} -X gologger.Version=${VERSION} -X main.mode=run" -o ./dist/citizenstats.exe

      # Build install mode binary (keep console)
      - name: Build install mode
        env:
          VERSION: ${{ steps.tag.outputs.new_tag }}
          GOOS: windows
          GOARCH: 386
        run: |
          go build -ldflags="-X main.Version=${VERSION} -X gologger.Version=${VERSION} -X main.mode=install" -o ./dist/citizenstats-installer.exe

      # Build uninstall mode binary (keep console)
      - name: Build uninstall mode
        env:
          VERSION: ${{ steps.tag.outputs.new_tag }}
          GOOS: windows
          GOARCH: 386
        run: |
          go build -ldflags="-X main.Version=${VERSION} -X gologger.Version=${VERSION} -X main.mode=uninstall" -o ./dist/citizenstats-uninstaller.exe

      # Install WiX toolset
      - name: Install WiX
        run: |
          curl -L https://github.com/wixtoolset/wix3/releases/download/wix3112rtm/wix311-binaries.zip -o wix.zip
          unzip wix.zip -d wix
          echo "$PWD/wix" >> $GITHUB_PATH

      # Install go-msi
      - name: Install go-msi
        run: |
          go install github.com/mh-cbon/go-msi@latest

      # Setup go-msi template
      - name: Setup go-msi
        run: |
          mkdir -p templates
          go-msi check-json --path wix.json
          go-msi set-guid --path wix.json --force
          go-msi generate-templates --path wix.json --out templates/

      # Create MSI installer
      - name: Create MSI
        env:
          VERSION: ${{ steps.tag.outputs.new_tag }}
        run: |
          go-msi make --msi ./dist/citizenstats-$VERSION.msi --version ${VERSION#v} --src . --path wix.json --arch 386

      # Add the MSI to the release files
      - name: Update Release Files
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./dist/citizenstats.exe
            ./dist/citizenstats-installer.exe
            ./dist/citizenstats-uninstaller.exe
            ./dist/citizenstats-${{ steps.tag.outputs.new_tag }}.msi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Create GitHub release
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.new_tag }}
          name: Release ${{ steps.tag.outputs.new_tag }}
          draft: false
          prerelease: false
          files: |
            ./dist/citizenstats.exe
            ./dist/citizenstats-installer.exe
            ./dist/citizenstats-uninstaller.exe
            ./dist/citizenstats-${{ steps.tag.outputs.new_tag }}.msi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
